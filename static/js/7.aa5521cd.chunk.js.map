{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/dialogs/Dialogs.module.css","components/dialogs/DialogsItem/DialogsItem.tsx","components/dialogs/Message/Message.tsx","components/dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/dialogs/DialogsContainer.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","module","exports","DialogItem","props","className","s","dialog","photo","src","alt","navLink","to","id","name","sendMessage","React","createRef","Message","ref","message","Dialogs","formik","useFormik","initialValues","newMessageBody","onSubmit","values","resetForm","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","handleSubmit","TextField","type","margin","placeholder","getFieldProps","Button","variant","color","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageAC","Component","restProps"],"mappings":"wGAAA,6CACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,EAAS,YAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C,sBCjBAS,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,MAAQ,uBAAuB,QAAU,yB,8GCqBjTC,EAbI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,8BACI,qBAAKF,UAAWC,IAAEE,MAAOC,IAAKL,EAAMI,MAAOE,IAAI,OAEnD,cAAC,IAAD,CAASL,UAAWC,IAAGK,QAASC,GAAI,YAAcR,EAAMS,GAAxD,SAA6DT,EAAMU,SAI9E,ECbGC,EAAcC,IAAMC,YAqBTC,EAdC,SAACd,GACb,OACI,mCACA,0BAAUe,IAAKJ,EACLV,UAAWC,IAAEc,QADvB,SAEShB,EAAMgB,WAOtB,E,2BC0CcC,EA/CC,SAACjB,GACb,IAAMkB,EAASC,YAAU,CACrBC,cAAe,CACXC,eAAgB,IAEpBC,SAAU,SAAAC,GACNvB,EAAMW,YAAYY,EAAOF,gBACzBH,EAAOM,WACV,IACDC,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMD,GAAIqB,EAAErB,GAAcL,MAAO0B,EAAE1B,OAAd0B,EAAErB,GAA/C,IAErCsB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASjB,QAASiB,EAAEjB,SAAgBiB,EAAExB,GAA1C,IAE3C,OAEI,sBAAKR,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEgC,aAAlB,SACKP,IAEL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACG,8BACKD,IAEJ,uBAAMT,SAAUJ,EAAOiB,aAAvB,UACI,8BACI,cAACC,EAAA,EAAD,aACIC,KAAK,WACLC,OAAO,SACPC,YAAY,sBACRrB,EAAOsB,cAAc,sBAGjC,8BACI,cAACC,EAAA,EAAD,CACIJ,KAAM,SAAUK,QAAS,YAAaC,MAAO,UADjD,4BASvB,E,6CCtDGC,EAA6B,SAACnB,GAAD,MAA+C,CAC5EoB,OAAQpB,EAAMqB,KAAKD,OADU,ECUlBE,sBACXC,aAbkB,SAACvB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IACwB,SAACuB,GACtB,MAAO,CACHtC,YAAY,SAACU,GACT4B,EAASC,YAAc7B,GAC1B,EAER,KDLM,SAA+B8B,GASlC,OADqCH,YAASJ,EAATI,EAPX,SAAChD,GAEnB,IAAK6C,EAAwB7C,EAAxB6C,OAAWO,EAAhB,YAA6BpD,EAA7B,GACA,OAAI6C,EACC,cAACM,EAAD,eAAeC,IADA,cAAC,IAAD,CAAU5C,GAAI,UAGzC,GAGJ,GCJcuC,CAGV9B,E","file":"static/js/7.aa5521cd.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2E1Jk\",\"dialogsItem\":\"Dialogs_dialogsItem__3whg0\",\"dialogsItems\":\"Dialogs_dialogsItems__3Ceu-\",\"active\":\"Dialogs_active__2CyGb\",\"messages\":\"Dialogs_messages__IgP8m\",\"message\":\"Dialogs_message__UU91m\",\"dialog\":\"Dialogs_dialog__2SOQc\",\"photo\":\"Dialogs_photo__jaNfY\",\"navLink\":\"Dialogs_navLink__2VeZ3\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\ntype dialogItemPropsType = {\r\n    name: String\r\n    id: number\r\n    photo: string\r\n}\r\nconst DialogItem = (props: dialogItemPropsType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div >\r\n                <img className={s.photo} src={props.photo} alt=\"\"/>\r\n            </div >\r\n            <NavLink className={s. navLink} to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype messagePropsType = {\r\n    message: string\r\n}\r\nlet sendMessage = React.createRef<HTMLTextAreaElement>()\r\n\r\nlet addMessage = () => {\r\n    let text = sendMessage.current?.value\r\n    alert(text)\r\n}\r\n\r\nconst Message = (props: messagePropsType) => {\r\n    return (\r\n        <>\r\n        <textarea ref={sendMessage}\r\n                  className={s.message}>\r\n                {props.message}\r\n            </textarea>\r\n        {/*<button onClick={addMessage}>send</button>*/}\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Message;","import React, { ChangeEvent } from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { DialogsType, MessageType } from '../../redux/store';\r\nimport {useFormik} from \"formik\";\r\nimport { TextField } from '@mui/material';\r\nimport Button from \"@mui/material/Button\";\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody: (body: any)=>void\r\n    sendMessage: (values: string)=>void\r\n    dialogsPage:  {\r\n        dialogs: DialogsType[]\r\n        messages: MessageType[]\r\n        newMessageBody: string\r\n    }\r\n    isAuth: boolean\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessageBody: ''\r\n        },\r\n        onSubmit: values => {\r\n            props.sendMessage(values.newMessageBody)\r\n            formik.resetForm()\r\n        }})\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}photo={d.photo}/>);\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key = {m.id}/>)\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n               <div>\r\n                   {messagesElements}\r\n                </div> \r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div>\r\n                        <TextField\r\n                            type='textarea'\r\n                            margin=\"normal\"\r\n                            placeholder='Enter your message'\r\n                            {...formik.getFieldProps('newMessageBody')}\r\n                            ></TextField>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            type={'submit'} variant={'contained'} color={'primary'}>\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React, { ComponentType } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { AppStateType } from '../redux/redux-store'\r\n\r\ntype MapStateToPropsType  = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect <T> (Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n       \r\n            let {isAuth, ...restProps} = props\r\n            if(!isAuth) return  <Navigate to={'/login'} />\r\n          return <Component {...restProps as any}/>\r\n        \r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import React, { ComponentType } from 'react'\r\nimport { sendMessageAC } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { compose, Dispatch } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state: AppStateType) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) =>{\r\n    return {\r\n        sendMessage:(newMessageBody: string)=>{\r\n            dispatch(sendMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps,  mapDispatchToProps),\r\n    withAuthRedirect)\r\n    (Dialogs);"],"sourceRoot":""}